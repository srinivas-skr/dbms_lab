QUESTION 4: Library database

BOOK (Book_id, Title, Publisher_Name, Pub_Year)
BOOK_AUTHORS (Book_id, Author_Name)
PUBLISHER (Name, Address, Phone)
BOOK_COPIES (Book_id, Branch_id, Noof_Copies)
BOOK_LENDING (Book_id, Branch_id, Card_No, Date_Out, Due_Date)
LIBRARY_BRANCH (Branch_id, Branch_Name, Address)
Write SQL queries to
1. Retrieve details of all books in the library â€“ id, title, name of publisher, authors, number of copies in each branch, etc.
2. Get the particulars of borrowers who have borrowed more than 3 books, but from Jan 2017 to Jun 2017
3. Delete a book in BOOK table. Update the contents of other tables to reflect this data manipulation operation.
SOLUTUON
-- Create tables
CREATE TABLE BOOK (
Book_id INT PRIMARY KEY,
Title VARCHAR(255),
Publisher_Name VARCHAR(255),
Pub_Year INT
);

-- Insert sample data
INSERT INTO BOOK VALUES
(1, 'Book1', 'Publisher1', 2015),
(2, 'Book2', 'Publisher2', 2018),
(3, 'Book3', 'Publisher3', 2020);


-- Show content after inserting data into BOOK
SELECT * FROM BOOK;

CREATE TABLE BOOK_AUTHORS (
Book_id INT,
Author_Name VARCHAR(255),
PRIMARY KEY (Book_id, Author_Name),
FOREIGN KEY (Book_id) REFERENCES BOOK(Book_id)
);

-- Insert sample data into BOOK_AUTHORS
INSERT INTO BOOK_AUTHORS VALUES
(1, 'Author1'),
(2, 'Author2'),
(2, 'Author3'),
(3, 'Author4');

-- Show content after inserting data into BOOK_AUTHORS
SELECT * FROM BOOK_AUTHORS;

CREATE TABLE PUBLISHER (
Name VARCHAR(255) PRIMARY KEY,
Address VARCHAR(255),
Phone VARCHAR(20)
);

-- Insert sample data into PUBLISHER
INSERT INTO PUBLISHER VALUES
('Publisher1', 'Address1', '123-456-7890'),
('Publisher2', 'Address2', '987-654-3210'),
('Publisher3', 'Address3', '111-222-3333');

-- Show content after inserting data into PUBLISHER
SELECT * FROM PUBLISHER;

CREATE TABLE BOOK_COPIES (
Book_id INT,
Branch_id INT,
Noof_Copies INT,
PRIMARY KEY (Book_id, Branch_id),
FOREIGN KEY (Book_id) REFERENCES BOOK(Book_id)
);

-- Insert sample data into BOOK_COPIES
INSERT INTO BOOK_COPIES VALUES
(1, 1, 5),
(1, 2, 3),
(2, 1, 2),
(3, 2, 4);

-- Show content after inserting data into BOOK_COPIES
SELECT * FROM BOOK_COPIES;

CREATE TABLE BOOK_LENDING (
Book_id INT,
Branch_id INT,
Card_No INT,
Date_Out DATE,
Due_Date DATE,
PRIMARY KEY (Book_id, Branch_id, Card_No),
FOREIGN KEY (Book_id) REFERENCES BOOK(Book_id)
);

-- Insert sample data into BOOK_LENDING
INSERT INTO BOOK_LENDING VALUES
(1, 1, 123, '2021-01-15', '2021-02-15'),
(2, 1, 456, '2017-05-10', '2017-06-10'),
(3, 2, 789, '2018-03-20', '2018-04-20');


-- Show content after inserting data into BOOK_LENDING
SELECT * FROM BOOK_LENDING;

CREATE TABLE LIBRARY_BRANCH (
Branch_id INT PRIMARY KEY,
Branch_Name VARCHAR(255),
Address VARCHAR(255)
);




-- Insert sample data into LIBRARY_BRANCH
INSERT INTO LIBRARY_BRANCH VALUES
(1, 'Branch1', 'Branch1 Address'),
(2, 'Branch2', 'Branch2 Address');




-- Show content after inserting data into LIBRARY_BRANCH
SELECT * FROM LIBRARY_BRANCH;




-- Query 1: Retrieve details of all books in the library
SELECT
B.Book_id,
B.Title,
B.Publisher_Name,
BA.Author_Name,
BC.Branch_id,
BC.Noof_Copies
FROM
BOOK B
JOIN
BOOK_AUTHORS BA ON B.Book_id = BA.Book_id
JOIN
BOOK_COPIES BC ON B.Book_id = BC.Book_id;




-- Query 2: Get particulars of borrowers who have borrowed more than 3 books from Jan 2017 to Jun 2017
SELECT
BL.Card_No,
COUNT(BL.Book_id) AS Books_Borrowed
FROM
BOOK_LENDING BL
WHERE
BL.Date_Out BETWEEN '2017-01-01' AND '2017-06-30'
GROUP BY
BL.Card_No
HAVING
COUNT(BL.Book_id) > 3;




-- Query 3: Delete a book in the BOOK table and update related tables
-- For example, let's delete Book with ID 2
BEGIN
-- Check if Book_id = 2 is in use in child tables
IF EXISTS (SELECT 1 FROM BOOK_AUTHORS WHERE Book_id = 2)
OR EXISTS (SELECT 1 FROM BOOK_COPIES WHERE Book_id = 2)
OR EXISTS (SELECT 1 FROM BOOK_LENDING WHERE Book_id = 2)
BEGIN
-- If in use, show message and rollback
PRINT 'Cannot delete Book with ID 2. It is referenced in other tables.';
END
ELSE
BEGIN
-- If not in use, delete from BOOK table
DELETE FROM BOOK WHERE Book_id = 2;
-- Delete from BOOK_AUTHORS, BOOK_COPIES, BOOK_LENDING if needed
DELETE FROM BOOK_AUTHORS WHERE Book_id = 2;
DELETE FROM BOOK_COPIES WHERE Book_id = 2;
DELETE FROM BOOK_LENDING WHERE Book_id = 2;
END;
END;




-- Show content after deletion
SELECT * FROM BOOK;
SELECT * FROM BOOK_AUTHORS;
SELECT * FROM BOOK_COPIES;
SELECT * FROM BOOK_LENDING;


