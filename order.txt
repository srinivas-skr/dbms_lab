QUESTION 5 Salesman Customer Orders

Consider the following schema for Order Database:
SALESMAN (Salesman_id, Name, City, Commission)
CUSTOMER (Customer_id, Cust_Name, City, Grade, Salesman_id)
ORDERS (Ord_No, Purchase_Amt, Ord_Date, Customer_id, Salesman_id)
Write SQL queries to
1. Count the customers with grades above Bangalore’s average.
2. Find the name and numbers of all salesmen who had more than one customer.
3. List all salesmen and indicate those who have and don’t have customers in their cities (Use UNION operation.)
SOLUTUON

-- Create tables
CREATE TABLE SALESMAN (
Salesman_id INT PRIMARY KEY,
Name VARCHAR(255),
City VARCHAR(255),
Commission DECIMAL(5, 2)
);

CREATE TABLE CUSTOMER (
Customer_id INT PRIMARY KEY,
Cust_Name VARCHAR(255),
City VARCHAR(255),
Grade INT,
Salesman_id INT,
FOREIGN KEY (Salesman_id) REFERENCES SALESMAN(Salesman_id)
);


CREATE TABLE ORDERss (
Ord_No INT PRIMARY KEY,
Purchase_Amt DECIMAL(10, 2),
Ord_Date DATE,
Customer_id INT,
Salesman_id INT,
FOREIGN KEY (Customer_id) REFERENCES CUSTOMER(Customer_id),
FOREIGN KEY (Salesman_id) REFERENCES SALESMAN(Salesman_id)
);


-- Insert sample data
-- SALESMAN
INSERT INTO SALESMAN VALUES
(1, 'John Doe', 'Bangalore', 0.10),
(2, 'Jane Smith', 'Mumbai', 0.15),
(3, 'Bob Johnson', 'Delhi', 0.12),
(4, 'Alice Brown', 'Bangalore', 0.08);


-- CUSTOMER
INSERT INTO CUSTOMER VALUES
(101, 'Customer1', 'Bangalore', 2, 1),
(102, 'Customer2', 'Mumbai', 3, 2),
(103, 'Customer3', 'Delhi', 1, 3),
(104, 'Customer4', 'Bangalore', 2, 4);


-- ORDERS
INSERT INTO ORDERss VALUES
(1, 500.00, '2023-01-10', 101, 1),
(2, 700.00, '2023-02-15', 102, 2),
(3, 300.00, '2023-03-20', 103, 3),
(4, 450.00, '2023-04-25', 104, 4);


-- Now, let's proceed with the queries


-- Query 1: Count the customers with grades above Bangalore’s average
SELECT COUNT(*) AS Above_Average_Grades
FROM CUSTOMER
WHERE Grade > (SELECT AVG(Grade) FROM CUSTOMER WHERE City = 'Bangalore');


-- Query 2: Find the name and numbers of all salesmen who had more than one customer
SELECT S.Name, S.Salesman_id, COUNT(C.Customer_id) AS Customer_Count
FROM SALESMAN S
JOIN CUSTOMER C ON S.Salesman_id = C.Salesman_id
GROUP BY S.Salesman_id, S.Name
HAVING COUNT(C.Customer_id) > 1;


-- Query 3: List all salesmen and indicate those who have and don’t have customers in their cities (Use UNION operation)
-- Salesmen with customers
SELECT DISTINCT S.Salesman_id, S.Name, S.City
FROM SALESMAN S
JOIN CUSTOMER C ON S.Salesman_id = C.Salesman_id


UNION

-- Salesmen without customers
SELECT S.Salesman_id, S.Name, S.City
FROM SALESMAN S
WHERE NOT EXISTS (SELECT 1 FROM CUSTOMER C WHERE C.Salesman_id = S.Salesman_id);
